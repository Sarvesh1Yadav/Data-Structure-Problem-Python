class Solution:
    def upperbnd(self,nums,target):
        l=0
        n=len(nums)
        r=n-1
        ans=n
        while l<=r:
            mid=(l+r)//2
            if nums[mid]>target:
                ans=mid
                r=mid-1
            else:
                l=mid+1
        return ans
    
    def lowerbnd(self,nums,target):
        l=0
        n=len(nums)
        r=n-1
        ans=n
        while l<=r:
            mid=(l+r)//2
            if nums[mid]>=target:
                ans=mid
                r=mid-1
            else:
                l=mid+1
        return ans
    def searchRange(self, nums: List[int], target: int) -> List[int]:
        lb= self.lowerbnd(nums,target)
        ub= self.upperbnd(nums,target)
        if lb==ub:
            return [-1,-1]
        else:
            return [lb,ub-1]

        
        
