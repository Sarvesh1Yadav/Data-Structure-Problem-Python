Problem Statement - Julius Caesar protected his confidential information by encrypting it using a cipher. Caesar's cipher shifts each letter by a number of letters. If the shift takes you past the end of the alphabet, just rotate back to the front of the alphabet. 
In the case of a rotation by 3, w, x, y and z would map to z, a, b and c.
Original alphabet:      abcdefghijklmnopqrstuvwxyz
Alphabet rotated +3:    defghijklmnopqrstuvwxyzabc

import math
import os
import random
import re
import sys

def caesarCipher(s, k):
    # Write your code here
    n = len(s)
    s1 = ''
    for i in range(n):
        if s[i].isalpha():
            if s[i].islower():
                
                s1+=chr(((ord(s[i])-97+k)%26)+97)
            else:
                 s1+=chr(((ord(s[i])-65+k)%26)+65)
        else:
            s1+=s[i]
    return s1

if __name__ == '__main__':
    fptr = open(os.environ['OUTPUT_PATH'], 'w')

    n = int(input().strip())

    s = input()

    k = int(input().strip())

    result = caesarCipher(s, k)

    fptr.write(result + '\n')

    fptr.close()
