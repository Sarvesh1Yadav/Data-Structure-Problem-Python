Problem Statement - 	Submissions	Leaderboard	Discussions	Editorial
An arcade game player wants to climb to the top of the leaderboard and track their ranking. The game uses Dense Ranking, so its leaderboard works like this:

The player with the highest score is ranked number  on the leaderboard.
Players who have equal scores receive the same ranking number, and the next player(s) receive the immediately following ranking number.

import math
import os
import random
import re
import sys

def climbingLeaderboard(ranked, player):
    # Remove duplicates and sort descending
    ranked = sorted(set(ranked), reverse=True)
    result = []
    index = len(ranked) - 1  # start from the lowest score on leaderboard

    for score in player:
        while index >= 0 and score >= ranked[index]:
            index -= 1
        # Rank is index+2 because index is 0-based, and we subtract one more in the loop
        result.append(index + 2)

    return result


if __name__ == '__main__':
    fptr = open(os.environ['OUTPUT_PATH'], 'w')

    ranked_count = int(input().strip())

    ranked = list(map(int, input().rstrip().split()))

    player_count = int(input().strip())

    player = list(map(int, input().rstrip().split()))

    result = climbingLeaderboard(ranked, player)

    fptr.write('\n'.join(map(str, result)))
    fptr.write('\n')

    fptr.close()
